generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String @id @default(uuid())
  oauthId       String @unique
  oauthProvider String
  name          String
  avatarUrl     String
  cart          Cart?  @relation("UserCart")
}

model Pizza {
  id          String         @id @default(uuid())
  title       String
  description String
  imageUrl    String
  category    Category       @relation(fields: [categoryId], references: [id])
  categoryId  String
  rating      Float
  minPrice    Int
  variants    PizzaVariant[]
}

model Category {
  id     String  @id @default(uuid())
  name   String
  order  Int
  pizzas Pizza[]
}

model PizzaVariant {
  id          String     @id @default(uuid())
  pizza       Pizza      @relation(fields: [pizzaId], references: [id])
  pizzaId     String
  doughType   DoughType  @relation(fields: [doughTypeId], references: [id])
  doughTypeId String
  pizzaSize   PizzaSize  @relation(fields: [pizzaSizeId], references: [id])
  pizzaSizeId String
  price       Int
  cartItems   CartItem[]
}

model DoughType {
  id       String         @id @default(uuid())
  name     String
  variants PizzaVariant[]
}

model PizzaSize {
  id       String         @id @default(uuid())
  size     Int
  variants PizzaVariant[]
}

model Cart {
  id        String     @id @default(uuid())
  user      User?      @relation("UserCart", fields: [userId], references: [id])
  userId    String?    @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id             String       @id @default(uuid())
  cart           Cart         @relation(fields: [cartId], references: [id])
  cartId         String
  pizzaVariant   PizzaVariant @relation(fields: [pizzaVariantId], references: [id])
  pizzaVariantId String
  amount         Int
}
