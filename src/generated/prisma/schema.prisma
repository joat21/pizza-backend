generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  oauthId       String  @unique
  oauthProvider String
  name          String
  surname       String
  email         String
  phone         String
  cart          Cart?
  orders        Order[]
}

model Pizza {
  id               String         @id @default(uuid())
  title            String
  description      String
  imageUrl         String
  overviewImageUrl String
  category         Category       @relation(fields: [categoryId], references: [id])
  categoryId       Int
  rating           Float
  minPrice         Int
  slug             String
  variants         PizzaVariant[]
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String
  pizzas Pizza[]
}

model PizzaVariant {
  id          String      @id @default(uuid())
  pizza       Pizza       @relation(fields: [pizzaId], references: [id])
  pizzaId     String
  doughType   DoughType   @relation(fields: [doughTypeId], references: [id])
  doughTypeId Int
  pizzaSize   PizzaSize   @relation(fields: [pizzaSizeId], references: [id])
  pizzaSizeId Int
  price       Int
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model DoughType {
  id       Int            @id @default(autoincrement())
  name     String
  variants PizzaVariant[]
}

model PizzaSize {
  id       Int            @id @default(autoincrement())
  size     Int
  variants PizzaVariant[]
}

model Cart {
  id        String     @id @default(uuid())
  user      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?    @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id             String       @id @default(uuid())
  cart           Cart         @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId         String
  pizzaVariant   PizzaVariant @relation(fields: [pizzaVariantId], references: [id])
  pizzaVariantId String
  amount         Int
  createdAt      DateTime     @default(now())
}

model Order {
  id         String      @id @default(uuid())
  user       User?       @relation(fields: [userId], references: [id])
  userId     String?
  totalPrice Int
  fullName   String
  email      String
  phone      String
  address    String
  comment    String?
  items      OrderItem[]
  createdAt  DateTime    @default(now())
}

model OrderItem {
  id             String       @id @default(uuid())
  order          Order        @relation(fields: [orderId], references: [id])
  orderId        String
  pizzaVariant   PizzaVariant @relation(fields: [pizzaVariantId], references: [id])
  pizzaVariantId String
  amount         Int
  priceAtOrder   Int
}
